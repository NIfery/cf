<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.it.cf.admin.model.AdminDAO">
   <sql id="searchWhere">
      <if test="searchKeyword!=null and searchKeyword!=''">
         where ${searchCondition}  like '%' || #{searchKeyword} || '%'
      </if>
   </sql>

   <select id="selectPwd" parameterType="string" resultType="string">
      select admin_pwd from admin
      where admin_id=#{adminId}
   </select>
   
   <select id="selectPosition" resultType="map">
      select * from position
   </select>
   
   <select id="selectByUserid" parameterType="string" resultType="adminVo">
      select * from admin where admin_id=#{adminId}
   </select>
   
   <insert id="insertAdmin" parameterType="adminVo">
      <selectKey keyProperty="adminNo" resultType="int" order="BEFORE">
         select admin_seq.nextval from dual
      </selectKey>
      INSERT INTO admin(admin_No, admin_Id, admin_Pwd, admin_Name, admin_Position) 
      VALUES (#{adminNo}, #{adminId}, #{adminPwd}, #{adminName}, #{adminPosition})
   </insert>
   
   <select id="selectAllUser" parameterType="searchVo" resultType="userVo" >
      select *
      from
      (
          select rownum as RNUM,A.*
          from
          (
             select * from users 
             <include refid="searchWhere"></include>
             order by user_no desc
          )A
      )
      <![CDATA[
      where RNUM > #{firstRecordIndex} 
      and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
      ]]>
   </select>
   
   <select id="selectTotalRecord" parameterType="SearchVo"
      resultType="int">
      select count(*) from users 
        <include refid="searchWhere"></include>
   </select>
   
   <select id="selectAllAdmin" parameterType="searchVo" resultType="adminVo" >
      select *
      from
      (
          select rownum as RNUM,A.*
          from
          (
             select * from admin 
             <include refid="searchWhere"></include>
             order by admin_no desc
          )A
      )
      <![CDATA[
      where RNUM > #{firstRecordIndex} 
      and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
      ]]>
   </select>
   
   <select id="selectTotalRecord2" parameterType="SearchVo"
      resultType="int">
      select count(*) from admin 
        <include refid="searchWhere"></include>
   </select>
   
   <select id = "idDuplChk" parameterType = "String" resultType = "int">
       SELECT COUNT(*) FROM admin WHERE admin_id = #{adminId}
   </select>
   
   <delete id="deleteUser" parameterType="int">
      delete from users where user_no=#{userNo}
   </delete>
   
   <delete id="deleteAdmin" parameterType="int">
      delete from admin where admin_no=#{adminNo}
   </delete>
   
   <update id="updatePwd" parameterType="adminVo" >
      update admin
      set admin_pwd=#{adminPwd}
      where admin_id=#{adminId}
   </update>
   
   <select id="getTotalUser" parameterType="userVo" resultType="int">
      select count(*) from users
   </select>
   
   <select id="getEnter" parameterType="userVo" resultType="int">
      select count(*)
      from users 
      where user_flag=1
   </select>
   
   <select id="getGeneral" parameterType="userVo" resultType="int">
      select count(*)
      from users 
      where user_flag=0
   </select>
   
   <select id="getTotalFunding" parameterType="projectVo" resultType="int">
      select count(*) from project
      where confirm='Y'
   </select>
   
   <select id="getMonthFunding" resultType="map">
      select 
      count (decode(to_char(project_regdate,'mm'),'01',1))jan,
      count (decode(to_char(project_regdate,'mm'),'02',1))feb,
      count (decode(to_char(project_regdate,'mm'),'03',1))mar,
      count (decode(to_char(project_regdate,'mm'),'04',1))apr,
      count (decode(to_char(project_regdate,'mm'),'05',1))may,
      count (decode(to_char(project_regdate,'mm'),'06',1))jun,
      count (decode(to_char(project_regdate,'mm'),'07',1))jul,
      count (decode(to_char(project_regdate,'mm'),'08',1))aug,
      count (decode(to_char(project_regdate,'mm'),'09',1))sep,
      count (decode(to_char(project_regdate,'mm'),'10',1))oct,
      count (decode(to_char(project_regdate,'mm'),'11',1))nov,
      count (decode(to_char(project_regdate,'mm'),'12',1))dec
      from project
      where confirm='Y'
   </select>
   
   <select id="getTotalWaitFunding" parameterType="projectVo" resultType="int">
      select count(*) from project
      where confirm='N'
   </select>

   <select id="getMonthWaitFunding" resultType="map">
      select 
      count (decode(to_char(project_regdate,'mm'),'01',2))jan2,
      count (decode(to_char(project_regdate,'mm'),'02',2))feb2,
      count (decode(to_char(project_regdate,'mm'),'03',2))mar2,
      count (decode(to_char(project_regdate,'mm'),'04',2))apr2,
      count (decode(to_char(project_regdate,'mm'),'05',2))may2,
      count (decode(to_char(project_regdate,'mm'),'06',2))jun2,
      count (decode(to_char(project_regdate,'mm'),'07',2))jul2,
      count (decode(to_char(project_regdate,'mm'),'08',2))aug2,
      count (decode(to_char(project_regdate,'mm'),'09',2))sep2,
      count (decode(to_char(project_regdate,'mm'),'10',2))oct2,
      count (decode(to_char(project_regdate,'mm'),'11',2))nov2,
      count (decode(to_char(project_regdate,'mm'),'12',2))dec2
      from project
      where confirm='N'
   </select>
   
   <select id="getTotalFundingComm" parameterType="FundingListVo" resultType="int">
      select trunc(sum((funding_amount*5)/100)) from fundingListView
      <![CDATA[
      where project_enddate<=sysdate
      and total_amount<=funding_amount
      ]]>
   </select>
   
   <select id="getMonthFundingComm" resultType="map">
      WITH TEMP AS(
      SELECT SUBSTR(PROJECT_ENDDATE, 4, 2)  AS PROJECT_END_MONTH, funding_amount
      FROM fundinglistview
      <![CDATA[
      where project_enddate<=sysdate
      and total_amount<=funding_amount
      ]]>
      )
      SELECT  nvl(jan,0) as jan3, nvl(feb,0) as feb3, nvl(mar,0) as mar3, nvl(apr,0) as apr3, nvl(may,0) as may3, nvl(jun,0) as jun3,
      nvl(jul,0) as jul3, nvl(aug,0) as aug3, nvl(sep,0) as sep3, nvl(oct,0) as oct3 ,nvl(nov,0) as nov3, nvl(dec,0) as dec3
        FROM TEMP
       PIVOT(
          SUM((funding_amount*5)/100)
          FOR PROJECT_END_MONTH
          IN('01' as jan,'02' as feb,'03' as mar,'04' as apr,'05' as may,'06' as jun,
          '07' as jul,'08' as aug,'09' as sep,'10' as oct,'11' as nov,'12' as dec)
       )
   </select>
   
   <select id="getCategoryFunding" resultType="map">
      select 
         count (decode(first_category_no,1,1)) game,
         count (decode(first_category_no,2,1)) show,
           count (decode(first_category_no,3,1)) design,
           count (decode(first_category_no,4,1)) cartoon,
           count (decode(first_category_no,5,1)) art,
           count (decode(first_category_no,6,1)) picture,
           count (decode(first_category_no,7,1)) movie,
           count (decode(first_category_no,8,1)) food,
           count (decode(first_category_no,9,1)) music,
           count (decode(first_category_no,10,1)) publishing,
           count (decode(first_category_no,11,1)) tech,
           count (decode(first_category_no,12,1)) pashion,
           count (decode(first_category_no,13,1)) journalism,
           count (decode(first_category_no,14,1)) crafts
      from fundingCategoryView
      where confirm='Y'
   </select>

   <select id="getFundingPercent" resultType="map">
      select 
      <![CDATA[
      concat(round(count(case when total_amount<=funding_amount then 0 end)/count(*)*100,2),'') as "success",
      concat(round(count(case when total_amount>funding_amount then 0 end)/count(*)*100,2),'') as "fail"
      from fundinglistview
      where confirm='Y'
      ]]>
   </select>
   
   <select id="getFundingTop5" resultType="map">
 select DISTINCT project_name, funding_amount
      from fundinglistview
      <![CDATA[
      WHERE ROWNUM <= 5
      order by funding_amount desc
      ]]>
   </select>
   
   <select id="DownAllUser" parameterType="searchVo" resultType="userVo" >
      select *
      from
      (
          select rownum as RNUM,A.*
          from
          (
             select * from users 
             <include refid="searchWhere"></include>
             order by user_no desc
          )A
      )
   </select>
   
   <select id="DownAllFunding" resultType="map">
      select * from downfundingview
   </select>
</mapper>