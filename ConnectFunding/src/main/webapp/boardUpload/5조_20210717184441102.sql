/* FAQ */
CREATE TABLE FAQ (
	FAQ_NO NUMBER NOT NULL, /* FAQ번호 */
	FAQ_TITLE VARCHAR2(200) NOT NULL, /* 제목 */
	FAQ_CONTENT CLOB NOT NULL, /* 내용 */
	CATEGORY_NO NUMBER, /* 카테고리번호 */
	ADMIN_NO NUMBER /* 관리자번호 */
);

COMMENT ON TABLE FAQ IS 'FAQ';

COMMENT ON COLUMN FAQ.FAQ_NO IS 'FAQ번호';

COMMENT ON COLUMN FAQ.FAQ_TITLE IS '제목';

COMMENT ON COLUMN FAQ.FAQ_CONTENT IS '내용';

COMMENT ON COLUMN FAQ.CATEGORY_NO IS '카테고리번호';

COMMENT ON COLUMN FAQ.ADMIN_NO IS '관리자번호';

CREATE UNIQUE INDEX PK_FAQ
	ON FAQ (
		FAQ_NO ASC
	);

ALTER TABLE FAQ
	ADD
		CONSTRAINT PK_FAQ
		PRIMARY KEY (
			FAQ_NO
		);

/* 관리자 */
CREATE TABLE ADMIN (
	ADMIN_NO NUMBER NOT NULL, /* 관리자번호 */
	ADMIN_ID VARCHAR2(50) NOT NULL, /* 관리자아이디 */
	ADMIN_PWD VARCHAR2(100) NOT NULL, /* 관리자비밀번호 */
	ADMIN_NAME VARCHAR2(50) NOT NULL /* 관리자이름 */
);

COMMENT ON TABLE ADMIN IS '관리자';

COMMENT ON COLUMN ADMIN.ADMIN_NO IS '관리자번호';

COMMENT ON COLUMN ADMIN.ADMIN_ID IS '관리자아이디';

COMMENT ON COLUMN ADMIN.ADMIN_PWD IS '관리자비밀번호';

COMMENT ON COLUMN ADMIN.ADMIN_NAME IS '관리자이름';

CREATE UNIQUE INDEX PK_ADMIN
	ON ADMIN (
		ADMIN_NO ASC
	);

ALTER TABLE ADMIN
	ADD
		CONSTRAINT PK_ADMIN
		PRIMARY KEY (
			ADMIN_NO
		);

/* 공지사항 */
CREATE TABLE NOTICE (
	NOTICE_NO NUMBER NOT NULL, /* 공지사항번호 */
	ADMIN_NO NUMBER NOT NULL, /* 관리자번호 */
	NOTICE_TITLE VARCHAR2(100) NOT NULL, /* 제목 */
	NOTICE_CONTENT CLOB NOT NULL, /* 내용 */
	NOTICE_FILENAME VARCHAR2(100) NOT NULL, /* 업로드파일명 */
	NOTICE_OLDFILENAME VARCHAR2(100) NOT NULL, /* 변경전파일명 */
	NOTICE_REGDATE DATE NOT NULL, /* 작성일 */
	NOTICE_COUNT NUMBER /* 조회수 */
);

COMMENT ON TABLE NOTICE IS '공지사항';

COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항번호';

COMMENT ON COLUMN NOTICE.ADMIN_NO IS '관리자번호';

COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '제목';

COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '내용';

COMMENT ON COLUMN NOTICE.NOTICE_FILENAME IS '업로드파일명';

COMMENT ON COLUMN NOTICE.NOTICE_OLDFILENAME IS '변경전파일명';

COMMENT ON COLUMN NOTICE.NOTICE_REGDATE IS '작성일';

COMMENT ON COLUMN NOTICE.NOTICE_COUNT IS '조회수';

CREATE UNIQUE INDEX PK_NOTICE
	ON NOTICE (
		NOTICE_NO ASC
	);

ALTER TABLE NOTICE
	ADD
		CONSTRAINT PK_NOTICE
		PRIMARY KEY (
			NOTICE_NO
		);

/* FAQ카테고리 */
CREATE TABLE FAQ_CATEGORY (
	CATEGORY_NO NUMBER NOT NULL, /* 카테고리번호 */
	CATEGORY_NAME VARCHAR2(100) NOT NULL /* 카테고리이름 */
);

COMMENT ON TABLE FAQ_CATEGORY IS 'FAQ카테고리';

COMMENT ON COLUMN FAQ_CATEGORY.CATEGORY_NO IS '카테고리번호';

COMMENT ON COLUMN FAQ_CATEGORY.CATEGORY_NAME IS '카테고리이름';

CREATE UNIQUE INDEX PK_FAQ_CATEGORY
	ON FAQ_CATEGORY (
		CATEGORY_NO ASC
	);

ALTER TABLE FAQ_CATEGORY
	ADD
		CONSTRAINT PK_FAQ_CATEGORY
		PRIMARY KEY (
			CATEGORY_NO
		);

/* 댓글 */
CREATE TABLE COMMENTS (
	COMMENT_NO NUMBER NOT NULL, /* 댓글번호 */
	COMMENT_CONTENT CLOB NOT NULL, /* 내용 */
	COMMENT_REGDATE DATE NOT NULL, /* 작성일 */
	COMMENT_GROUPNO NUMBER, /* 그룹 */
	COMMENT_STEP NUMBER, /* 스텝 */
	COMMENT_SORTNO NUMBER, /* 정렬 */
	COMMENT_DELFLAG CHAR, /* 삭제여부 */
	BOARD_NO NUMBER, /* 게시글번호 */
	USER_NO NUMBER /* 회원번호 */
);

COMMENT ON TABLE COMMENTS IS '댓글';

COMMENT ON COLUMN COMMENTS.COMMENT_NO IS '댓글번호';

COMMENT ON COLUMN COMMENTS.COMMENT_CONTENT IS '내용';

COMMENT ON COLUMN COMMENTS.COMMENT_REGDATE IS '작성일';

COMMENT ON COLUMN COMMENTS.COMMENT_GROUPNO IS '그룹';

COMMENT ON COLUMN COMMENTS.COMMENT_STEP IS '스텝';

COMMENT ON COLUMN COMMENTS.COMMENT_SORTNO IS '정렬';

COMMENT ON COLUMN COMMENTS.COMMENT_DELFLAG IS '삭제여부';

COMMENT ON COLUMN COMMENTS.BOARD_NO IS '게시글번호';

COMMENT ON COLUMN COMMENTS.USER_NO IS '회원번호';

CREATE UNIQUE INDEX PK_COMMENTS
	ON COMMENTS (
		COMMENT_NO ASC
	);

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT PK_COMMENTS
		PRIMARY KEY (
			COMMENT_NO
		);

/* 계좌 */
CREATE TABLE ACCOUNT (
	ACCOUNT_NO VARCHAR2(50) NOT NULL, /* 계좌번호 */
	ACCOUNT_HOLDER VARCHAR2(50) NOT NULL, /* 예금주명 */
	BANK_NAME VARCHAR2(50) NOT NULL, /* 은행명 */
	BIRTH VARCHAR2(50) NOT NULL, /* 생년월일 */
	USER_NO NUMBER /* 회원번호 */
);

COMMENT ON TABLE ACCOUNT IS '계좌';

COMMENT ON COLUMN ACCOUNT.ACCOUNT_NO IS '계좌번호';

COMMENT ON COLUMN ACCOUNT.ACCOUNT_HOLDER IS '예금주명';

COMMENT ON COLUMN ACCOUNT.BANK_NAME IS '은행명';

COMMENT ON COLUMN ACCOUNT.BIRTH IS '생년월일';

COMMENT ON COLUMN ACCOUNT.USER_NO IS '회원번호';

CREATE UNIQUE INDEX PK_ACCOUNT
	ON ACCOUNT (
		ACCOUNT_NO ASC
	);

ALTER TABLE ACCOUNT
	ADD
		CONSTRAINT PK_ACCOUNT
		PRIMARY KEY (
			ACCOUNT_NO
		);

/* 쪽지발신 */
CREATE TABLE MESSAGE_SEND (
	MESSAGE_NO NUMBER NOT NULL, /* 번호 */
	MESSAGE_TITLE VARCHAR2(100) NOT NULL, /* 제목 */
	MESSAGE_CONTENT CLOB NOT NULL, /* 내용 */
	MESSAGE_REGDATE DATE NOT NULL, /* 작성일 */
	USER_NO NUMBER /* 회원번호 */
);

COMMENT ON TABLE MESSAGE_SEND IS '쪽지발신';

COMMENT ON COLUMN MESSAGE_SEND.MESSAGE_NO IS '번호';

COMMENT ON COLUMN MESSAGE_SEND.MESSAGE_TITLE IS '제목';

COMMENT ON COLUMN MESSAGE_SEND.MESSAGE_CONTENT IS '내용';

COMMENT ON COLUMN MESSAGE_SEND.MESSAGE_REGDATE IS '작성일';

COMMENT ON COLUMN MESSAGE_SEND.USER_NO IS '회원번호';

CREATE UNIQUE INDEX PK_MESSAGE_SEND
	ON MESSAGE_SEND (
		MESSAGE_NO ASC
	);

ALTER TABLE MESSAGE_SEND
	ADD
		CONSTRAINT PK_MESSAGE_SEND
		PRIMARY KEY (
			MESSAGE_NO
		);

/* 회원 */
CREATE TABLE USERS (
	USER_NO NUMBER NOT NULL, /* 회원번호 */
	USER_FLAG NUMBER NOT NULL, /* 회원구분 */
	USER_EMAIL VARCHAR2(50), /* 이메일 */
	BUSINESS_NO VARCHAR2(50), /* 사업자번호 */
	USER_PWD VARCHAR2(100) NOT NULL, /* 비밀번호 */
	USER_NAME VARCHAR2(50) NOT NULL, /* 이름 */
	USER_HP VARCHAR2(50), /* 전화번호 */
	USER_ZIPCODE NUMBER, /* 우편번호 */
	USER_ADDRESS VARCHAR2(100), /* 주소 */
	USER_JOINDATE DATE DEFAULT sysdate NOT NULL, /* 가입일 */
	USER_OUTDATE DATE, /* 탈퇴일 */
	OUT_FLAG CHAR /* 탈퇴여부 */
);

COMMENT ON TABLE USERS IS '회원';

COMMENT ON COLUMN USERS.USER_NO IS '회원번호';

COMMENT ON COLUMN USERS.USER_FLAG IS '회원구분';

COMMENT ON COLUMN USERS.USER_EMAIL IS '이메일';

COMMENT ON COLUMN USERS.BUSINESS_NO IS '사업자번호';

COMMENT ON COLUMN USERS.USER_PWD IS '비밀번호';

COMMENT ON COLUMN USERS.USER_NAME IS '이름';

COMMENT ON COLUMN USERS.USER_HP IS '전화번호';

COMMENT ON COLUMN USERS.USER_ZIPCODE IS '우편번호';

COMMENT ON COLUMN USERS.USER_ADDRESS IS '주소';

COMMENT ON COLUMN USERS.USER_JOINDATE IS '가입일';

COMMENT ON COLUMN USERS.USER_OUTDATE IS '탈퇴일';

COMMENT ON COLUMN USERS.OUT_FLAG IS '탈퇴여부';

CREATE UNIQUE INDEX PK_USERS
	ON USERS (
		USER_NO ASC
	);

CREATE UNIQUE INDEX UIX_USERS
	ON USERS (
		USER_EMAIL ASC,
		BUSINESS_NO ASC
	);

ALTER TABLE USERS
	ADD
		CONSTRAINT PK_USERS
		PRIMARY KEY (
			USER_NO
		);

ALTER TABLE USERS
	ADD
		CONSTRAINT UK_USERS
		UNIQUE (
			USER_EMAIL,
			BUSINESS_NO
		);

/* 게시판 */
CREATE TABLE BOARD (
	BOARD_NO NUMBER NOT NULL, /* 게시글번호 */
	BOARD_TITLE VARCHAR2(100) NOT NULL, /* 제목 */
	BOARD_CONTENT VARCHAR2(200) NOT NULL, /* 내용 */
	BOARD_FILENAME VARCHAR2(100), /* 업로드파일명 */
	BOARD_OLDFILENAME VARCHAR2(100), /* 변경전파일명 */
	BOARD_FILESIZE LONG, /* 파일크기 */
	BOARD_DOWNCOUNT NUMBER, /* 다운로드수 */
	BOARD_REGDATE DATE NOT NULL, /* 작성일 */
	BOARD_READCOUNT NUMBER, /* 조회수 */
	USER_NO NUMBER /* 회원번호 */
);

COMMENT ON TABLE BOARD IS '게시판';

COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글번호';

COMMENT ON COLUMN BOARD.BOARD_TITLE IS '제목';

COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '내용';

COMMENT ON COLUMN BOARD.BOARD_FILENAME IS '업로드파일명';

COMMENT ON COLUMN BOARD.BOARD_OLDFILENAME IS '변경전파일명';

COMMENT ON COLUMN BOARD.BOARD_FILESIZE IS '파일크기';

COMMENT ON COLUMN BOARD.BOARD_DOWNCOUNT IS '다운로드수';

COMMENT ON COLUMN BOARD.BOARD_REGDATE IS '작성일';

COMMENT ON COLUMN BOARD.BOARD_READCOUNT IS '조회수';

COMMENT ON COLUMN BOARD.USER_NO IS '회원번호';

CREATE UNIQUE INDEX PK_BOARD
	ON BOARD (
		BOARD_NO ASC
	);

ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BOARD_NO
		);

/* 카테고리 대분류 */
CREATE TABLE FIRST_CATEGORY (
	FIRST_CATEGORY_NO NUMBER NOT NULL, /* 대분류번호 */
	SECOND_CATEGORY_NO NUMBER, /* 중분류번호 */
	CATEGORY_NAME VARCHAR2(100) NOT NULL /* 카테고리이름 */
);

COMMENT ON TABLE FIRST_CATEGORY IS '카테고리 대분류';

COMMENT ON COLUMN FIRST_CATEGORY.FIRST_CATEGORY_NO IS '대분류번호';

COMMENT ON COLUMN FIRST_CATEGORY.SECOND_CATEGORY_NO IS '중분류번호';

COMMENT ON COLUMN FIRST_CATEGORY.CATEGORY_NAME IS '카테고리이름';

CREATE UNIQUE INDEX PK_FIRST_CATEGORY
	ON FIRST_CATEGORY (
		FIRST_CATEGORY_NO ASC
	);

ALTER TABLE FIRST_CATEGORY
	ADD
		CONSTRAINT PK_FIRST_CATEGORY
		PRIMARY KEY (
			FIRST_CATEGORY_NO
		);

/* 카테고리 중분류 */
CREATE TABLE SECOND_CATEGORY (
	SECOND_CATEGORY_NO NUMBER NOT NULL, /* 중분류번호 */
	CATEGORY_NAME VARCHAR2(100) NOT NULL /* 카테고리이름 */
);

COMMENT ON TABLE SECOND_CATEGORY IS '카테고리 중분류';

COMMENT ON COLUMN SECOND_CATEGORY.SECOND_CATEGORY_NO IS '중분류번호';

COMMENT ON COLUMN SECOND_CATEGORY.CATEGORY_NAME IS '카테고리이름';

CREATE UNIQUE INDEX PK_SECOND_CATEGORY
	ON SECOND_CATEGORY (
		SECOND_CATEGORY_NO ASC
	);

ALTER TABLE SECOND_CATEGORY
	ADD
		CONSTRAINT PK_SECOND_CATEGORY
		PRIMARY KEY (
			SECOND_CATEGORY_NO
		);

/* 답변 */
CREATE TABLE ANSWER (
	ANSWER_NO NUMBER NOT NULL, /* 답변번호 */
	ANSWER_CONTENT CLOB NOT NULL, /* 답변내용 */
	ANSWER_REGDATE DATE NOT NULL, /* 작성일 */
	QUESTION_NO NUMBER /* 문의글번호 */
);

COMMENT ON TABLE ANSWER IS '답변';

COMMENT ON COLUMN ANSWER.ANSWER_NO IS '답변번호';

COMMENT ON COLUMN ANSWER.ANSWER_CONTENT IS '답변내용';

COMMENT ON COLUMN ANSWER.ANSWER_REGDATE IS '작성일';

COMMENT ON COLUMN ANSWER.QUESTION_NO IS '문의글번호';

CREATE UNIQUE INDEX PK_ANSWER
	ON ANSWER (
		ANSWER_NO ASC
	);

ALTER TABLE ANSWER
	ADD
		CONSTRAINT PK_ANSWER
		PRIMARY KEY (
			ANSWER_NO
		);

/* 창작자문의하기 */
CREATE TABLE QUESTION (
	QUESTION_NO NUMBER NOT NULL, /* 문의글번호 */
	QUESTION_TITLE VARCHAR2(100) NOT NULL, /* 문의제목 */
	QUESTION_CONTENT CLOB NOT NULL, /* 문의내용 */
	QUESTION_FLAG CHAR NOT NULL, /* 답변여부 */
	QUESTION_REGDATE DATE NOT NULL, /* 작성일 */
	PROJECT_NO NUMBER /* 프로젝트번호 */
);

COMMENT ON TABLE QUESTION IS '창작자문의하기';

COMMENT ON COLUMN QUESTION.QUESTION_NO IS '문의글번호';

COMMENT ON COLUMN QUESTION.QUESTION_TITLE IS '문의제목';

COMMENT ON COLUMN QUESTION.QUESTION_CONTENT IS '문의내용';

COMMENT ON COLUMN QUESTION.QUESTION_FLAG IS '답변여부';

COMMENT ON COLUMN QUESTION.QUESTION_REGDATE IS '작성일';

COMMENT ON COLUMN QUESTION.PROJECT_NO IS '프로젝트번호';

CREATE UNIQUE INDEX PK_QUESTION
	ON QUESTION (
		QUESTION_NO ASC
	);

ALTER TABLE QUESTION
	ADD
		CONSTRAINT PK_QUESTION
		PRIMARY KEY (
			QUESTION_NO
		);

/* 프로젝트 */
CREATE TABLE PROJECT (
	PROJECT_NO NUMBER NOT NULL, /* 프로젝트번호 */
	PROJECT_NAME LONG NOT NULL, /* 프로젝트명 */
	PROJECT_SUMMARY CLOB, /* 프로젝트요약 */
	PROJECT_CONTENT CLOB NOT NULL, /* 프로젝트내용 */
	PROJECT_IMAGE VARCHAR2(100), /* 대표이미지 */
	PROJECT_FILENAME VARCHAR2(100), /* 변경전파일명 */
	TOTAL_AMOUNT NUMBER NOT NULL, /* 목표금액 */
	PROJECT_STARTDATE DATE NOT NULL, /* 등록일 */
	PROJECT_ENDDATE DATE NOT NULL, /* 마감일 */
	USER_NO NUMBER, /* 회원번호 */
	FUNDING_NO NUMBER NOT NULL, /* 투자금액번호 */
	SECOND_CATEGORY_NO NUMBER /* 중분류번호 */
);

COMMENT ON TABLE PROJECT IS '프로젝트';

COMMENT ON COLUMN PROJECT.PROJECT_NO IS '프로젝트번호';

COMMENT ON COLUMN PROJECT.PROJECT_NAME IS '프로젝트명';

COMMENT ON COLUMN PROJECT.PROJECT_SUMMARY IS '프로젝트요약';

COMMENT ON COLUMN PROJECT.PROJECT_CONTENT IS '프로젝트내용';

COMMENT ON COLUMN PROJECT.PROJECT_IMAGE IS '대표이미지';

COMMENT ON COLUMN PROJECT.PROJECT_FILENAME IS '변경전파일명';

COMMENT ON COLUMN PROJECT.TOTAL_AMOUNT IS '목표금액';

COMMENT ON COLUMN PROJECT.PROJECT_STARTDATE IS '등록일';

COMMENT ON COLUMN PROJECT.PROJECT_ENDDATE IS '마감일';

COMMENT ON COLUMN PROJECT.USER_NO IS '회원번호';

COMMENT ON COLUMN PROJECT.FUNDING_NO IS '투자금액번호';

COMMENT ON COLUMN PROJECT.SECOND_CATEGORY_NO IS '중분류번호';

CREATE UNIQUE INDEX PK_PROJECT
	ON PROJECT (
		PROJECT_NO ASC
	);

ALTER TABLE PROJECT
	ADD
		CONSTRAINT PK_PROJECT
		PRIMARY KEY (
			PROJECT_NO
		);

/* 투자내역 */
CREATE TABLE FUNDING_LIST (
	FUNDING_LIST_NO NUMBER NOT NULL, /* 투자내역번호 */
	FUNDING_AMOUNT NUMBER, /* 투자금액 */
	PROJECT_NO NUMBER, /* 프로젝트번호 */
	USER_NO NUMBER /* 회원번호 */
);

COMMENT ON TABLE FUNDING_LIST IS '투자내역';

COMMENT ON COLUMN FUNDING_LIST.FUNDING_LIST_NO IS '투자내역번호';

COMMENT ON COLUMN FUNDING_LIST.FUNDING_AMOUNT IS '투자금액';

COMMENT ON COLUMN FUNDING_LIST.PROJECT_NO IS '프로젝트번호';

COMMENT ON COLUMN FUNDING_LIST.USER_NO IS '회원번호';

CREATE UNIQUE INDEX PK_FUNDING_LIST
	ON FUNDING_LIST (
		FUNDING_LIST_NO ASC
	);

ALTER TABLE FUNDING_LIST
	ADD
		CONSTRAINT PK_FUNDING_LIST
		PRIMARY KEY (
			FUNDING_LIST_NO
		);

/* 현재투자금액 */
CREATE TABLE TOTAL_FUNDING (
	FUNDING_NO NUMBER NOT NULL, /* 투자금액번호 */
	TOTAL_FUNDING_AMOUNT NUMBER, /* 총투자금액 */
	FUNDING_LIST_NO NUMBER /* 투자내역번호 */
);

COMMENT ON TABLE TOTAL_FUNDING IS '현재투자금액';

COMMENT ON COLUMN TOTAL_FUNDING.FUNDING_NO IS '투자금액번호';

COMMENT ON COLUMN TOTAL_FUNDING.TOTAL_FUNDING_AMOUNT IS '총투자금액';

COMMENT ON COLUMN TOTAL_FUNDING.FUNDING_LIST_NO IS '투자내역번호';

CREATE UNIQUE INDEX PK_TOTAL_FUNDING
	ON TOTAL_FUNDING (
		FUNDING_NO ASC
	);

ALTER TABLE TOTAL_FUNDING
	ADD
		CONSTRAINT PK_TOTAL_FUNDING
		PRIMARY KEY (
			FUNDING_NO
		);

/* 쪽지수신 */
CREATE TABLE MESSAGE_RECEIVE (
	MESSAGE_NO NUMBER NOT NULL, /* 번호 */
	MESSAGE_TITLE VARCHAR2(100), /* 제목 */
	MESSAGE_CONTENT CLOB, /* 내용 */
	MESSAGE_REGDATE DATE /* 작성일 */
);

COMMENT ON TABLE MESSAGE_RECEIVE IS '쪽지수신';

COMMENT ON COLUMN MESSAGE_RECEIVE.MESSAGE_NO IS '번호';

COMMENT ON COLUMN MESSAGE_RECEIVE.MESSAGE_TITLE IS '제목';

COMMENT ON COLUMN MESSAGE_RECEIVE.MESSAGE_CONTENT IS '내용';

COMMENT ON COLUMN MESSAGE_RECEIVE.MESSAGE_REGDATE IS '작성일';

CREATE UNIQUE INDEX PK_MESSAGE_RECEIVE
	ON MESSAGE_RECEIVE (
		MESSAGE_NO ASC
	);

ALTER TABLE MESSAGE_RECEIVE
	ADD
		CONSTRAINT PK_MESSAGE_RECEIVE
		PRIMARY KEY (
			MESSAGE_NO
		);

ALTER TABLE FAQ
	ADD
		CONSTRAINT FK_FAQ_CATEGORY_TO_FAQ
		FOREIGN KEY (
			CATEGORY_NO
		)
		REFERENCES FAQ_CATEGORY (
			CATEGORY_NO
		);

ALTER TABLE FAQ
	ADD
		CONSTRAINT FK_ADMIN_TO_FAQ
		FOREIGN KEY (
			ADMIN_NO
		)
		REFERENCES ADMIN (
			ADMIN_NO
		);

ALTER TABLE NOTICE
	ADD
		CONSTRAINT FK_ADMIN_TO_NOTICE
		FOREIGN KEY (
			ADMIN_NO
		)
		REFERENCES ADMIN (
			ADMIN_NO
		);

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT FK_BOARD_TO_COMMENTS
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		);

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT FK_USERS_TO_COMMENTS
		FOREIGN KEY (
			USER_NO
		)
		REFERENCES USERS (
			USER_NO
		);

ALTER TABLE ACCOUNT
	ADD
		CONSTRAINT FK_USERS_TO_ACCOUNT
		FOREIGN KEY (
			USER_NO
		)
		REFERENCES USERS (
			USER_NO
		);

ALTER TABLE MESSAGE_SEND
	ADD
		CONSTRAINT FK_USERS_TO_MESSAGE_SEND
		FOREIGN KEY (
			USER_NO
		)
		REFERENCES USERS (
			USER_NO
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_USERS_TO_BOARD
		FOREIGN KEY (
			USER_NO
		)
		REFERENCES USERS (
			USER_NO
		);

ALTER TABLE FIRST_CATEGORY
	ADD
		CONSTRAINT FK_SECOND_TO_CATEGORY
		FOREIGN KEY (
			SECOND_CATEGORY_NO
		)
		REFERENCES SECOND_CATEGORY (
			SECOND_CATEGORY_NO
		);

ALTER TABLE ANSWER
	ADD
		CONSTRAINT FK_QUESTION_TO_ANSWER
		FOREIGN KEY (
			QUESTION_NO
		)
		REFERENCES QUESTION (
			QUESTION_NO
		);

ALTER TABLE QUESTION
	ADD
		CONSTRAINT FK_PROJECT_TO_QUESTION
		FOREIGN KEY (
			PROJECT_NO
		)
		REFERENCES PROJECT (
			PROJECT_NO
		);

ALTER TABLE PROJECT
	ADD
		CONSTRAINT FK_TOTAL_FUNDING_TO_PROJECT
		FOREIGN KEY (
			FUNDING_NO
		)
		REFERENCES TOTAL_FUNDING (
			FUNDING_NO
		);

ALTER TABLE PROJECT
	ADD
		CONSTRAINT FK_USERS_TO_PROJECT
		FOREIGN KEY (
			USER_NO
		)
		REFERENCES USERS (
			USER_NO
		);

ALTER TABLE PROJECT
	ADD
		CONSTRAINT FK_SECOND_CATEGORY_TO_PROJECT
		FOREIGN KEY (
			SECOND_CATEGORY_NO
		)
		REFERENCES SECOND_CATEGORY (
			SECOND_CATEGORY_NO
		);

ALTER TABLE FUNDING_LIST
	ADD
		CONSTRAINT FK_PROJECT_TO_FUNDING_LIST
		FOREIGN KEY (
			PROJECT_NO
		)
		REFERENCES PROJECT (
			PROJECT_NO
		);

ALTER TABLE FUNDING_LIST
	ADD
		CONSTRAINT FK_USERS_TO_FUNDING_LIST
		FOREIGN KEY (
			USER_NO
		)
		REFERENCES USERS (
			USER_NO
		);

ALTER TABLE TOTAL_FUNDING
	ADD
		CONSTRAINT FK_FNDNG_LIST_TO_TL_FNDNG
		FOREIGN KEY (
			FUNDING_LIST_NO
		)
		REFERENCES FUNDING_LIST (
			FUNDING_LIST_NO
		);

ALTER TABLE MESSAGE_RECEIVE
	ADD
		CONSTRAINT FK_SEND_TO_RECEIVE
		FOREIGN KEY (
			MESSAGE_NO
		)
		REFERENCES MESSAGE_SEND (
			MESSAGE_NO
		);